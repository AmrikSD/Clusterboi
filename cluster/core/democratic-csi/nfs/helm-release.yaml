---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: democratic-csi
  namespace: kube-system
spec:
  interval: 15m
  releaseName: zfs-nfs
  chart:
    spec:
      chart: democratic-csi
      version: 0.13.1
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    csiDriver:
      # should be globally unique for a given cluster
      name: "org.democratic-csi.nfs"

    controller:
      driver:
        image: docker.io/democraticcsi/democratic-csi:v1.7.2
      livenessProbe:
        enabled: true

      externalProvisioner:
        # copied from default values; overriding timeout from 90s to 180s
        args:
          - --v=5
          - --leader-election
          - --leader-election-namespace={{ .Release.Namespace }}
          - --timeout=180s
          - --worker-threads=10
          - --extra-create-metadata
          - --csi-address=/csi-data/csi.sock

      podAnnotations:
        secret.reloader.stakater.com/reload: zfs-nfs-secret

    node:
      driver:
        image: docker.io/democraticcsi/democratic-csi:v1.7.2

    storageClasses:
      - name: zfs-nfs
        defaultClass: false
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          fsType: nfs
          #csi.storage.k8s.io/fstype: nfs
        mountOptions:
          - nfsvers=4.2
          - tcp
          - intr
          - hard
          - noatime
          - nodiratime
          - rsize=1048576
          - wsize=1048576
        secrets:
          provisioner-secret:
          controller-publish-secret:
          node-stage-secret:
          node-publish-secret:
          controller-expand-secret:

    driver:
      # existingConfigSecret: zfs-nfs-secret
      config:
        driver: zfs-generic-nfs
        instance_id:
        httpConnection:
          protocol: http
          host: ${SECRET_NFS_IP}
          port: 80
          # use only 1 of apiKey or username/password
          # if both are present, apiKey is preferred
          # apiKey is only available starting in TrueNAS-12
          #apiKey:
          username: ${SECRET_NFS_USER}
          password: ${SECRET_NFS_PASSWORD}
          allowInsecure: true
          # use apiVersion 2 for TrueNAS-12 and up (will work on 11.x in some scenarios as well)
          # leave unset for auto-detection
          #apiVersion: 2
        sshConnection:
          host: ${SECRET_NFS_IP}
          port: 22
          username: ${SECRET_NFS_USER}
          # use either password or key
          password: "${SECRET_NFS_PASSWORD}"
        zfs:
          # can be used to override defaults if necessary
          # the example below is useful for TrueNAS 12
          cli:
            sudoEnabled: true
          #
          #  leave paths unset for auto-detection
          #  paths:
          #    zfs: /usr/local/sbin/zfs
          #    zpool: /usr/local/sbin/zpool
          #    sudo: /usr/local/bin/sudo
          #    chroot: /usr/sbin/chroot

          # can be used to set arbitrary values on the dataset/zvol
          # can use handlebars templates with the parameters from the storage class/CO
          datasetProperties:
            "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
          #  "org.freenas:test": "{{ parameters.foo }}"
          #  "org.freenas:test2": "some value"

          datasetParentName: pool_01/k8s/n/v
          # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
          # they may be siblings, but neither should be nested in the other
          detachedSnapshotsDatasetParentName: pool_01/k8s/n/s
          datasetEnableQuotas: true
          datasetEnableReservation: false
          datasetPermissionsMode: "0777"
          datasetPermissionsUser: 0
          datasetPermissionsGroup: 0
          #datasetPermissionsAcls:
          #- "-m everyone@:full_set:allow"
          #- "-m u:kube:full_set:allow"

        nfs:
          shareCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
          shareHost: ${SECRET_NFS_IP}
          shareAlldirs: false
          shareAllowedHosts: []
          shareAllowedNetworks: []
          shareMaprootUser: root
          shareMaprootGroup: wheel
          shareMapallUser: ""
          shareMapallGroup: ""

    volumeSnapshotClasses:
      - name: zfs-nfs
        deletionPolicy: Retain
