---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarr-env
  namespace: services
data:
  TZ: ${TIMEZONE}
  PUID: "0"
  PGID: "0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-deployment
  namespace: services
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
        - name: sonarr
          image: linuxserver/sonarr:latest
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: sonarr-env
                  key: TZ
            - name: PUID
              valueFrom:
                configMapKeyRef:
                  name: sonarr-env
                  key: PUID
            - name: PGID
              valueFrom:
                configMapKeyRef:
                  name: sonarr-env
                  key: PGID
          ports:
            - name: web
              containerPort: 8989
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
            - name: sonarr-download
              mountPath: /Plex
          resources:
            limits:
              cpu: 256m
              memory: 512Mi
      volumes:
        - name: sonarr-download
          nfs:
            server: 10.2.1.2
            path: "/mnt/pool_01/Plex"
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-claim
  namespace: services
  labels:
    app: sonarr
  annotations:
    volume.beta.kubernetes.io/storage-class: "freenas-nfs-csi"
spec:
  storageClassName: freenas-nfs-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
kind: Service
apiVersion: v1
metadata:
  name: sonarr-web-service
  namespace: services
spec:
  externalTrafficPolicy: Local
  selector:
    app: sonarr
  ports:
    - protocol: UDP
      port: 80
      targetPort: 8989
      name: sonarr-web
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr-ingress
  namespace: services
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    external-dns/is-public: "false"
    hajimari.io/enable: "true"
    hajimari.io/appName: "sonarr"
    hajimari.io/icon: "dns"
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  tls:
    - secretName: sonarr-tls
      hosts:
        - "sonarr.${SECRET_DOMAIN}"
  rules:
    - host: "sonarr.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarr-web-service
                port:
                  number: 80
